name: content-web

# This workflow is triggered on push to the 'content-web' directory of the main branch of the repository
on:
  push:
    branches:
        - main
    paths:
        - 'content-web/**'

  # Configure workflow to also support triggering manually
  workflow_dispatch:

# Environment variables are defined so that they can be used throughout the job definitions.
env:
  imageRepository: 'content-web'
  resourceGroupName: 'fabmedical-sjw'
  containerRegistryName: 'fabmedicalsjw'
  containerRegistry: 'fabmedicalsjw.azurecr.io'
  dockerfilePath: './content-web'
  tag: '${{ github.run_id  }}'

# Jobs define the actions that take place when code is pushed to the main branch
jobs:
  build-and-publish-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
    # Checkout the repo
    - uses: actions/checkout@main

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: ${{ env.containerRegistry }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push an image to container registry
      uses: docker/build-push-action@v2
      with:
        context: ${{ env.dockerfilePath  }}
        file: "${{ env.dockerfilePath }}/Dockerfile"
        pull: true
        push: true
        tags: |
          ${{ env.containerRegistry }}/${{ env.imageRepository }}:${{ env.tag }}
          ${{ env.containerRegistry }}/${{ env.imageRepository }}:latest

  build-and-push-helm-chart:
    name: Build and Push Helm Chart
    runs-on: ubuntu-latest
    needs: [build-and-publish-docker-image]
    steps:
    # Checkout the repo
    - uses: actions/checkout@main

    - name: Helm Install
      uses: azure/setup-helm@v1

    - name: Helm Chart Save
      run: |
        cd ./content-web/charts/web
        helm package .
      env:
        HELM_EXPERIMENTAL_OCI: 1

    - name: Helm Chart Push
      run: |
        cd ./content-web/charts/web
        helm registry login ${{ env.containerRegistry }} --username ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}
        helm push web-0.1.0.tgz oci://${{ env.containerRegistry }}/helm
      env:
        HELM_EXPERIMENTAL_OCI: 1

  aks-deployment:
    name: AKS Deployment
    runs-on: ubuntu-latest
    needs: [build-and-publish-docker-image,build-and-push-helm-chart]
    steps:
    # Checkout the repo
    - uses: actions/checkout@main

    - name: Helm Install
      uses: azure/setup-helm@v1

    - name: kubeconfig
      run: echo "${{ secrets.KUBECONFIG }}" >> kubeconfig

    - name: Helm Upgrade
      run: |
        helm repo add ${{ env.containerRegistry }} https://${{ env.containerRegistry }}/helm/v1/repo --username ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}
        helm repo update
        helm upgrade ${{ env.containerRegistry }}/helm/web
      env:
        HELM_EXPERIMENTAL_OCI: 1

    # - name: Helm Upgrade
    #   run: |
    #     helm registry login ${{ env.containerRegistry }} --username ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }}
    #     helm upgrade ${{ env.containerRegistry }}/helm/web
    #   env:
    #     KUBECONFIG: './kubeconfig'
    #     HELM_EXPERIMENTAL_OCI: 1
